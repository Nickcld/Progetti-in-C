Dati in input due array di numeri floating point: A composto da n numeri disposti in ordine crescente e B composto da m numeri disposti in ordine casuale, inserire al centro di A i numeri presenti in B mantenendo l'ordine crescente senza l'uso di un terzo array di appoggio.

FUNZIONE ordinare_vettore

INPUT
B, vettore di cui dover ordinare in modo crescente gli elementi, array di reali a 1 dimensione
m, dimensione di B, naturale >0

LAVORO
j, individua le posizioni degli elementi nel vettore, naturale >0
temp, variabile utile a memorizzare il valore da ordinare, reale
ordinato, indica se il vettore è ordinato o meno, booleano

OUTPUT
B, vettore i cui elementi sono ordinati in modo crescente, array di reali a 1 dimensione

ALGORITMO

INIZIO
    j = 1
    ordinato = FALSO
    MENTRE (ordinato = FALSO)
        j = 1
        ordinato = VERO
        MENTRE (j < m)
            SE (elemento in posizione j di B > elemento in posizione j + 1 di B)
                ALLORA temp = elemento in posizione j di B
                    elemento in posizione j di B = elemento in posizione j + 1 di B
                    elemento in posizione j + 1 di B = temp
                    ordinato = FALSO
            FINE
            j = j + 1
        FINE
    FINE
FINE

FUNZIONE fondere_vettori

INPUT
A, vettore in cui inserire gli elementi del vettore B mantenendo l'ordine crescente, array a 1 dimensione di reali
n, dimensione di A, naturale >0
B, vettore i cui elementi vanno inseriti nel vettore A mantenendo l'ordine crescente, array a 1 dimensione di reali
m, dimensione di B, naturale >0

LAVORO
nuova_dimensione, nuova dimensione del vettore A data dalla somma delle dimensioni originali dei due vettori, naturale >0
i, individua le posizioni degli elementi di A, naturale >0
j, individua le posizioni degli elementi di B, naturale >0
temp, variabile utile a memorizzare il valore da ordinare, reale
ordinato, indica se il vettore è ordinato o meno, booleano

OUTPUT
A, vettore A costituito dagli elementi dei due vettori A e B disposti in ordine crescente, array a 1 dimensione di reali

ALGORITMO

INIZIO
    nuova_dimensione = n + m
    i = nuova_dimensione
    j = m
    MENTRE (i > n) AND (j >= 1)
        elemento in posizione i di A = elemento in posizione j di B
        i = i - 1
        j = j - 1
    FINE
    ordinato = FALSO
    i = 1
    MENTRE (ordinato = FALSO)
        ordinato = VERO
        i = 1
        MENTRE (i < nuova_dimensione)
            SE (elemento in posizione i di A > elemento in posizione i + 1 di B)
                ALLORA temp = elemento in posizione i di A
                       elemento in posizione i di A = elemento in posizione i + 1 di A
                       elemento in posizione i + 1 di A = temp
                       ordinato = FALSO
            FINE
            i = i + 1
        FINE
    FINE
FINE
  









 














